<?php

namespace App;

use App\kernel\App;
use App\kernel\Request;

class  artisan
{

  public function __construct($argv)
  {
    $dir = __DIR__;

    $filename = $argv[1] ?? '';
    $file = $filename ?? '';
    $name =
      $file ?? '';
    if (
      $argv[0] == 'run' and
      key_exists(1,$argv)
    ) {
        echo "wo";
    //   shell_exec("php -S localhost:8080 -t public");
    require_once __DIR__ . "/kernel/migration/artisan_migrate.php";

    shell_exec("php artisan_migrate.php");
    }
    foreach ($argv as $key) {


      if ($key == '--m') {
        if ($key == 'down' || $key == 'up') {
          $func =  $key ?? '';
        }
        require_once __DIR__ . "/kernel/migration/artisan_migrate.php";

        shell_exec("php artisan_migrate.php");
      }
      if ($key == '-c') {
        require_once __DIR__ . "/kernel/strings/controller/controller.php";
        $controller =  fopen('app/controller/' . $file . '.php', 'wr', true);
        if (
          fwrite($controller, $fileinfo)

        ) {
          echo "
      ****************
      *********
      ****
      
      CONTROLLER CREATED SUCCESSFULLY! 
       
      ****
      *********
      ****************\n" . PHP_EOL;
        }
      }
      if ($key == 'del' and $key == '-d') {

        $del = dirname(__DIR__) . "/mvc_by_me/controller/" . $file . ".php";
        shell_exec("sudo rm $del");
      }
      if ($key == 'm') {
        require_once __DIR__ . "/kernel/strings/controller/modal.php";

        $controller =  fopen('modal/' . $file . '.php', 'wr', true);
        fwrite($controller, $fileinfo);
      }
      if ($key == '-m') {
        require_once __DIR__ . "/kernel/strings/controller/migration.php";

        $controller =  fopen('database/migrations/' . ucfirst($name) . '.php', 'wr', true);
        fwrite($controller, $fileinfo);
      }
      if ($key == 'v') {
        require_once __DIR__ . "/kernel/strings/controller/modal.php";
        $controller =  fopen('view/' . $file . '.php', 'wr', true);
        fwrite($controller, $viewInfo);
      }
    }
  }
}

new artisan($argv);
